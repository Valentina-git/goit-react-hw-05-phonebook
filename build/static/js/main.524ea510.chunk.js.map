{"version":3,"sources":["contactForm/StyledContactForm.js","contactForm/ContactForm.js","contactList/StyledContactList.js","contactList/contactListItem/StyledContactListItem.js","contactList/contactListItem/ContactListItem.js","contactList/ContactList.js","filter/StyledFilter.js","filter/Filter.js","phonebookApp/StyledPhonebook.js","alert/StyledAlert.js","alert/Alert.js","phonebookApp/PhonebookApp.js","App.js","index.js"],"names":["StyledContactForm","styled","div","initialState","name","contact","ContactForm","getUser","useState","person","setPerson","onHandleChange","e","target","value","onSubmit","preventDefault","id","uuidv4","className","type","onChange","StyledContactList","ContactLi","li","ContactListItem","item","onBtnClick","onClick","data-id","ContactList","contacts","filter","TransitionGroup","component","toLowerCase","includes","map","CSSTransition","timeout","classNames","StyledFilter","Filter","StyledPhonebookApp","AlertBox","Alert","message","PhonebookApp","state","setState","alertMsg","setAlertMsg","showAlert","setShowAlert","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","prev","showAlertMsg","setTimeout","StyledPhonebook","in","unmountOnExit","appear","some","elem","length","dataset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.524ea510.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StyledContactForm = styled.div`\r\n  padding: 20px 0;\r\n  width: 100%;\r\n  background-color: #efefef;\r\n  .formLabel {\r\n    font-weight: 700;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .formInput {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .formBtn {\r\n    padding: 5px 10px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .formBtn:hover,\r\n  .formBtn:focus {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default StyledContactForm;\r\n","import React, { useState } from 'react';\r\nimport StyledContactForm from './StyledContactForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  contact: '',\r\n};\r\n\r\nconst ContactForm = ({ getUser }) => {\r\n  const [person, setPerson] = useState({ ...initialState });\r\n\r\n  const onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    setPerson({ ...person, [name]: value });\r\n  };\r\n\r\n  const onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    getUser({\r\n      ...person,\r\n      id: uuidv4(),\r\n      name: person.name,\r\n      contact: person.contact,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StyledContactForm>\r\n      <form onSubmit={onHandleSubmit}>\r\n        <label className=\"formLabel\">\r\n          Name:\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={person.name}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n        <label className=\"formLabel\">\r\n          Number:\r\n          <input\r\n            className=\"formInput\"\r\n            type=\"text\"\r\n            name=\"contact\"\r\n            value={person.contact}\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className=\"formBtn\">Add contact</button>\r\n      </form>\r\n    </StyledContactForm>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  getUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledContactList = styled.div`\r\n  padding: 10px 0;\r\n  .li:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .myListItem-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .myListItem-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myListItem-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .myListItem-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\n\r\nexport default StyledContactList;\r\n","import styled from 'styled-components';\r\n\r\nconst ContactLi = styled.li`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n  border: 1px solid navy;\r\n  border-radius: 5px;\r\n  box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  .contactName {\r\n    font-weight: 700;\r\n    margin-right: 5px;\r\n  }\r\n  .contactNumber {\r\n    margin-right: 5px;\r\n  }\r\n  .contactBtn {\r\n    padding: 5px 15px;\r\n    border: 1px solid navy;\r\n    border-radius: 5px;\r\n    background-color: lightblue;\r\n    box-shadow: 1px 1px 7px 0px rgba(140, 140, 140, 0.75);\r\n  }\r\n  .contactBtn:hover,\r\n  .contactBtn:focus {\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default ContactLi;\r\n","import React from 'react';\r\nimport ContactLi from './StyledContactListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ item, onBtnClick }) => {\r\n  return (\r\n    <ContactLi key={item.id}>\r\n      <span className=\"contactName\">{item.name}:</span>\r\n      <span className=\"contactNumber\">{item.contact}</span>\r\n      <button\r\n        className=\"contactBtn\"\r\n        type=\"button\"\r\n        onClick={onBtnClick}\r\n        data-id={item.id}\r\n      >\r\n        Delete contact\r\n      </button>\r\n    </ContactLi>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onBtnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport StyledContactList from './StyledContactList';\r\nimport ContactListItem from './contactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, filter, onBtnClick }) => {\r\n  return (\r\n    <StyledContactList>\r\n      <TransitionGroup component=\"ul\" className=\"list\">\r\n        {contacts\r\n          .filter(item =>\r\n            item.name.toLowerCase().includes(filter.toLowerCase()),\r\n          )\r\n          .map(item => (\r\n            <CSSTransition key={item.id} timeout={250} classNames=\"myListItem\">\r\n              <ContactListItem item={item} onBtnClick={onBtnClick} />\r\n            </CSSTransition>\r\n          ))}\r\n      </TransitionGroup>\r\n    </StyledContactList>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onBtnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFilter = styled.div`\r\n  width: 100%;\r\n  padding: 20px 0;\r\n  .filter-label {\r\n    font-weight: 700;\r\n    display: block;\r\n  }\r\n  .filter-input {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default StyledFilter;\r\n","import React from 'react';\r\nimport StyledFilter from './StyledFilter';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <StyledFilter>\r\n      <label className=\"filterLabel\">\r\n        Search by Name\r\n        <input\r\n          className=\"filterInput\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </StyledFilter>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledPhonebookApp = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border: 1px solid navy;\r\n  border-radius: 10px;\r\n  width: max-content;\r\n  margin: 0 auto;\r\n  background-color: #efefef;\r\n  box-shadow: 7px 5px 7px 5px rgba(140, 140, 140, 0.75);\r\n  .pageTitle {\r\n    margin-bottom: 20px;\r\n  }\r\n  .numberTitle {\r\n    margin-bottom: 10px;\r\n    position: relative;\r\n    z-index: 1;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .myTitle-appear {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n  .myTitle-appear-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 500ms;\r\n  }\r\n  .myTitle-exit {\r\n    opacity: 1;\r\n  }\r\n  .myTitle-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n  }\r\n\r\n  .myFilter-enter {\r\n    opacity: 0;\r\n    transform: translateY(-50%);\r\n  }\r\n  .myFilter-enter-active {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myFilter-exit {\r\n    opacity: 1;\r\n  }\r\n  .myFilter-exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms;\r\n  }\r\n\r\n  .myAlert-enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  .myAlert-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: all 250ms;\r\n  }\r\n  .myAlert-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  .myAlert-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: all 250ms;\r\n  }\r\n`;\r\n\r\nexport default StyledPhonebookApp;\r\n","import styled from 'styled-components';\r\n\r\nconst AlertBox = styled.div`\r\n  padding: 15px;\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 40px;\r\n  background-color: tomato;\r\n  max-width: 450px;\r\n  border-radius: 5px;\r\n  .alertText {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport default AlertBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AlertBox from './StyledAlert';\r\n\r\nconst Alert = ({ message }) => {\r\n  return (\r\n    <AlertBox>\r\n      <p className=\"alertText\">{message}</p>\r\n    </AlertBox>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ContactForm from '../contactForm/ContactForm';\r\nimport ContactList from '../contactList/ContactList';\r\nimport Filter from '../filter/Filter';\r\nimport StyledPhonebookApp from './StyledPhonebook';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Alert from '../alert/Alert';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nconst PhonebookApp = () => {\r\n  const [state, setState] = useState({ ...initialState });\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // componentDidMount\r\n    const contacts = localStorage.getItem('contacts');\r\n    if (contacts) {\r\n      setState({ contacts: JSON.parse(contacts) });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // componentDidUpdate\r\n    localStorage.setItem('contacts', JSON.stringify(state.contacts));\r\n    setState(prev => ({ ...prev, filter: state.filter }));\r\n  }, [state.contacts, state.filter]);\r\n\r\n  const showAlertMsg = message => {\r\n    setAlertMsg(message);\r\n    setShowAlert(true);\r\n\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n\r\n    setTimeout(() => {\r\n      setAlertMsg('');\r\n    }, 3250);\r\n  };\r\n\r\n  const getUser = person => {\r\n    const { contacts } = state;\r\n\r\n    if (contacts.some(elem => elem.name === person.name)) {\r\n      showAlertMsg(`${person.name} is already in contacts`);\r\n      return;\r\n    }\r\n    if (!person.name.length) {\r\n      showAlertMsg('Please enter a name');\r\n      return;\r\n    }\r\n    if (!person.contact.length) {\r\n      showAlertMsg(`Please enter a number`);\r\n      return;\r\n    }\r\n    setState(prev => ({\r\n      ...prev,\r\n      contacts: [...prev.contacts, { ...person }],\r\n    }));\r\n  };\r\n\r\n  const onHandleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const onHandleDeleteContact = e => {\r\n    const id = e.target.dataset.id;\r\n    setState(prev => ({\r\n      ...prev,\r\n      contacts: [...prev.contacts.filter(item => item.id !== id)],\r\n    }));\r\n  };\r\n\r\n  const { contacts, filter } = state;\r\n\r\n  return (\r\n    <StyledPhonebookApp>\r\n      <CSSTransition\r\n        in={showAlert}\r\n        timeout={250}\r\n        classNames=\"myAlert\"\r\n        unmountOnExit\r\n      >\r\n        <Alert message={alertMsg} />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames=\"myTitle\"\r\n        unmountOnExit\r\n      >\r\n        <h1 className=\"pageTitle\">Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <ContactForm getUser={getUser} />\r\n      <h2 className=\"numberTitle\">Contacts</h2>\r\n\r\n      <CSSTransition\r\n        in={state.contacts.length > 1}\r\n        timeout={500}\r\n        classNames=\"myFilter\"\r\n        unmountOnExit\r\n      >\r\n        <Filter onChange={onHandleInputChange} filter={filter} />\r\n      </CSSTransition>\r\n\r\n      <ContactList\r\n        contacts={contacts}\r\n        filter={filter}\r\n        onBtnClick={onHandleDeleteContact}\r\n      />\r\n    </StyledPhonebookApp>\r\n  );\r\n};\r\n\r\nexport default PhonebookApp;\r\n","import React from \"react\";\r\nimport PhonebookApp from \"./phonebookApp/PhonebookApp\";\r\n\r\nconst App = () => {\r\n\treturn <PhonebookApp />;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}